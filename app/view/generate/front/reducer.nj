import initialState from './initialState';
import { reducer as get{{modalCapitalize}}ListReducer } from './get{{modalCapitalize}}List';
import { reducer as submit{{modalCapitalize}}Reducer } from './submit{{modalCapitalize}}';
import { reducer as delete{{modalCapitalize}}Reducer } from './delete{{modalCapitalize}}';
import { reducer as {{modal}}ModalChangeReducer } from './{{modal}}ModalChange';
import { reducer as chooseCurrent{{modalCapitalize}}Reducer } from './chooseCurrent{{modalCapitalize}}';

const reducers = [
  get{{modalCapitalize}}ListReducer,
  submit{{modalCapitalize}}Reducer,
  delete{{modalCapitalize}}Reducer,
  {{modal}}ModalChangeReducer,
  chooseCurrent{{modalCapitalize}}Reducer,
];

export default function reducer(state = initialState, action) {
  let newState;
  switch (action.type) {
    // Handle cross-topic actions here
    default:
      newState = state;
      break;
  }
  return reducers.reduce((s, r) => r(s, action), newState);
}
